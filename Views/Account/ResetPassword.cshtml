@model PIA_SRM_MVC.Models.ResetPasswordModel
@{
    ViewBag.Title = "Reset Password";
    Layout = "~/Views/Shared/Account_Layout.cshtml";
    Response.Cache.SetCacheability(HttpCacheability.NoCache);
    Response.Cache.SetNoStore();
}

<div class="login-form">
    <div class="auth-switch">
        <a href="@Url.Action("Login", "Account")" class="">Login</a>
        <a href="@Url.Action("GetOtp", "Account")" class="">Sign Up</a>
    </div>

    <div class="logo">
        <img src="~/Content/pia-logo.png" alt="PIA Logo" style="width: 250px; margin-bottom: 10px;" />
        <p class="portal-title">PIA SRM Portal</p>

        @if (TempData["Message"] != null)
        {
            <div class="alert alert-success" id="otpMessage" style="margin-top: 10px;">
                @TempData["Message"]
            </div>
        }
    </div>

    @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label for="NewPassword" style="margin-bottom: 8px; font-weight: 600; text-align: left;">New Password</label>
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control", placeholder = "Enter new password" })
            @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <label for="ConfirmPassword" style="margin-bottom: 8px; font-weight: 600; text-align: left;">Confirm Password</label>
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirm password" })
            @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
        </div>

        <button type="submit" class="btn-login">Submit</button>
    }
</div>

@section scripts {
    <script>
        setTimeout(function () {
            var msg = document.getElementById("otpMessage");
            if (msg) msg.style.display = 'none';
        }, 3000);
    </script>
}
